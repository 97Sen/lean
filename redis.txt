单线程模型
数据结构：
	1、BitMap： 位图
	2、HyperLogLog:  超小内存唯一值的计数
	3、GEO: 地理信息定位
	4、String
	5、Hash Tables
	6、Linked Lists
	7、Sets
	8、Sorted Sets
功能：
	1、发布订阅
	2、事务
	3、Lua脚本
	4、 pipeline
为什么这么快：
1、纯内存
2、非阻塞IO
---------------------------------------------------------------
命令：
redis-server 启动服务
redis-cli -h 127.0.0.1 -p 6379 连接服务
redis-server --port 6380 指定启动服务的端口
---------------------------------------------------------------
通用命令：
keys *  #遍历所有的key
keys [pattern] #例如：keys he*  以he开头的键值;   keys he[h-L]*  he第三个值h-L的键值;   keys he? 以he开头的三位长度结果;
dbsize  #有多少个数据
exists key #检查key是否存在
del key #删除指定key-value
expire key seconds #key在seconds后过期
ttl key #查看key剩余的过期时间
persist key # 去掉key的过期时间
type key #返回key的类型
sadd key [value] 
get key #获取值
set key value #不管key是否存在都设置
setnx key value #key不存在，才设置
set key value xx #key存在，才设置
mget key1 key2 key3... #批量获取key, 原子操作
mset key1 value1 key2 value2 key3 value3   #批量存储数据
getset key newvalue # set key newvalue并返回久的value
append key value # 将value追加到旧的value
strlen key #返回字段串的长度（注意中文一个中文两个字节）
incrbyfloat key 3.5 # 增加key对应的值3.5
getrange key start end #获取字符串指定下标所有的值
setrange key index value #设置指定下标所有对应的值
del key #删除键值
incr  key # key自增1，如果key不存在，自增后get(key)=1
decr key # key自减1，如果key不存在，自减后get(key)=1
incrby key k # key自增k，如果key不存在，自增后get(key)=k
decr key k # key自减k,如果key不存在，自减后get(key)=k
---------------------------------------------------------------
错误：
1、在Linux环境下安装失败可能是没有安装C++环境： yum install cpp  ， yum install gcc  

2、In file included from adlist.c:34:0: zmalloc.h:50:31: 致命错误：jemalloc/jemalloc.h：没有那个文件或目录
     执行：make MALLOC=libc 参考网站：https://www.cnblogs.com/Ai-Hen-Jiao-zhi/p/10127731.html
